Add the current working directory to the load path
#+begin_src elisp :results silent
  (add-to-list 'load-path (expand-file-name "/home/max/repos/csharp-babel"))
#+end_src

Add the language to the loaded ones
#+begin_src elisp :results silent
  (add-to-list 'org-babel-load-languages '(csharp . t))
#+end_src

#+begin_src csharp :session none :project "compiledvaffan" :namespace "wow"
  int myInt = 1;
  var myString = $"this is myInt {myInt}";
  Console.WriteLine(myString);
#+end_src

#+RESULTS:
: this is myInt 1


#+begin_src csharp :main "no" :class "no" :project "external-test" :namespace "oha" :project-type "class"
  public class Printer
  {
      static public void WriteInt(int writeInt)
      {
          Console.WriteLine(writeInt);
      }
  }
#+end_src

#+RESULTS:



#+begin_src csharp :main "no" :references '( "./external-test/external-test.csproj") :class "Prog" :usings '("oha")
  internal interface ITest
  {
      public int MyInt { get; set; }
  }

  internal interface IStringTest
  {
      public string MyString { get; set; }
  }

  internal class TestClass : ITest, IStringTest
  {
      public TestClass()
      {
          this.MyInt = 17;
          this.MyString = "My Integer ";
      }

      public int MyInt { get; set; }

      public string MyString { get; set; }
  }

  public static void Main(string[] args)
  {
      TestClass myTest = new TestClass();
      Printer.WriteInt(myTest.MyInt);
  }
#+end_src

#+RESULTS:
: 17

#+begin_src csharp 
  var test = "String";
  Console.WriteLine(test);
#+end_src


* others
#+begin_src C++ :includes '(<iostream>)
  std::cout << "hello\n";
  int yo = "fail";y
#+end_src

#+RESULTS:


#+begin_src java
  System.out.println("Console is: " + System.console());
#+end_src

#+RESULTS:
: Console is: java.io.ProxyingConsole@36d4b5c
